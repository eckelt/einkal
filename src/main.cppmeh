#include <Arduino.h>
#include <SPI.h>

// --- Pinbelegung ---
#define EPD_CS   10
#define EPD_DC   9
#define EPD_RST  17
#define EPD_BUSY 21
#define EPD_SCK  36
#define EPD_MOSI 35

// BUSY-Logik ist je nach Panel "LOW = busy" (häufig).
// Wir loggen einfach Pegelwechsel und Zeit.

void printBusy(const char* tag) {
  int b = digitalRead(EPD_BUSY);
  Serial.printf("[%s] BUSY=%d\n", tag, b);
}

bool waitBusyChange(uint32_t timeout_ms, const char* tag) {
  int start = digitalRead(EPD_BUSY);
  uint32_t t0 = millis();
  Serial.printf("Warte auf BUSY-Änderung (%s), Start=%d ...\n", tag, start);
  while (millis() - t0 < timeout_ms) {
    int v = digitalRead(EPD_BUSY);
    if (v != start) { Serial.printf("BUSY wechselte zu %d nach %lu ms\n", v, (unsigned long)(millis()-t0)); return true; }
    delay(10);
  }
  Serial.println("=> KEIN BUSY-Wechsel (Timeout).");
  return false;
}

void sendCommand(uint8_t cmd) {
  digitalWrite(EPD_DC, LOW);      // Command
  digitalWrite(EPD_CS, LOW);
  SPI.transfer(cmd);
  digitalWrite(EPD_CS, HIGH);
}

void setup() {
  Serial.begin(115200);
  delay(200);
  Serial.println("\n=== E-Paper Diagnose ===");

  pinMode(EPD_CS,  OUTPUT); digitalWrite(EPD_CS, HIGH);
  pinMode(EPD_DC,  OUTPUT); digitalWrite(EPD_DC, LOW);
  pinMode(EPD_RST, OUTPUT); digitalWrite(EPD_RST, HIGH);
  pinMode(EPD_BUSY, INPUT);   // kein Pullup; Panel treibt den Pin

  // --- A) Hard-Reset Test (ohne SPI) ---
  printBusy("Start");
  Serial.println("Hard-Reset: RST LOW 200ms, dann HIGH");
  digitalWrite(EPD_RST, LOW);  delay(200);
  digitalWrite(EPD_RST, HIGH); delay(10);
  printBusy("nach RST");
  waitBusyChange(3000, "nach Hard-Reset");   // viele Panels ändern kurz den Pegel

  // --- B) SPI initialisieren + SWRESET (0x12) ---
  Serial.println("\nInitialisiere SPI und sende SWRESET (0x12) ...");
  SPI.begin(EPD_SCK, -1, EPD_MOSI, EPD_CS);   // SCK, MISO=-1, MOSI, CS
  delay(10);
  printBusy("vor SWRESET");
  sendCommand(0x12);  // Software Reset
  bool changed = waitBusyChange(10000, "nach SWRESET");  // sollte toggeln
  if (!changed) {
    Serial.println("Hinweis: Wenn BUSY NIE toggelt -> BUSY/RST/3V3 prüfen.");
  }

  Serial.println("\nFertig. Wenn weder A noch B BUSY-Pegel ändern, ist sehr wahrscheinlich Verkabelung/Power falsch.");
}

void loop() { }